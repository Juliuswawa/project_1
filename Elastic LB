# AWS ELB config
resource "aws_elb" "custom-elb" {
  name = "custom-elb"
  name = [aws_subnet.customvpc-public-1.id,aws_subnet.customvpc-public-2.id]
  security_groups = [aws_security_group.custom-elb-sg.id]

  listener {
    instance_port = 80
    instance_protocol = "http"
    lb_port = 80
    lb_protocol = "http"
}

health_checker {
  # (required) The number of checks before the instance is decleared health
  health_threshold = 2
  unhealth_threshold = 2
  timeout = 3
  target = "http:80/"
  interval = 30
}

  cross_zone_load_balancing = true
  connection_draining = true
  connection_draining_timeout = 400

  tags = {
    Name = "custom-elb"
 }
}

# Create Security Group to allow port 80
  resource "aws_security_group" "custom-elb-sg" {
    name        = "ustom-elb-sg"
    description = "security group for elb"
    vpc_id      = aws_vpc.custom-vpc.id
     
    ingress {
      from_port   = 80
      to_port     = 80
      protocol    = "tcp"
      cidr_blocks = ["0.0.0.0/0"]
    }   
            
    egress {
      from_port        = 0
      to_port          = 0
      protocol         = "-1"
      cidr_blocks      = ["0.0.0.0/0"]
    }
  
    tags = {
      Name = "custom-elb-sg"
    }
  }

  # security group for the instance
  resource "aws_security_group" "custom-instance-sg" {
    name        = "ustom-instance-sg"
    description = "security group for instance"
    vpc_id      = aws_vpc.custom-vpc.id
     
    ingress {
      from_port   = 22
      to_port     = 80
      protocol    = "tcp"
      cidr_blocks = ["0.0.0.0/0"]
      security_groups = [aws_security_group.custom-elb-sg]
    }   
            
    egress {
      from_port        = 0
      to_port          = 0
      protocol         = "-1"
      cidr_blocks      = ["0.0.0.0/0"]
    }
  
    tags = {
      Name = "custom-instance-sg"
    }
  }

